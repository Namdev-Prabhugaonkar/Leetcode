/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {
    
    int count1=0;
    int count2=0;
    
    struct ListNode * currA = headA;
    struct ListNode * currB = headB;
    
    while(currA!=NULL){
        count1++;
        currA = currA->next;
    }
    
    while(currB!=NULL){
        count2++;
        currB = currB->next;
    }
    
    currA = headA;
    currB = headB;
    
    int diff = abs(count1-count2);
    if(count1>count2){
        while(diff!=0){
            currA = currA->next;
            diff--;
        }
    }
    else{
        while(diff!=0){
            currB = currB->next;
            diff--;
        }
    }
  
    while(currA!=0 && currB!=0){
        if(currA==currB){
            return currA;
        }
        
        currA = currA->next;
        currB = currB->next;
    }
    
    return 0;
}
